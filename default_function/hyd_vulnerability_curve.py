
import numpy as np

def P(psi, psi50, b):
    """
    Calculates the fractional conductivity using a 2-parameter Weibull function:
    P(psi) = (1/2)^((psi/psi50)^b)

    Parameters:
    - psi : float or np.array
    - psi50 : float
    - b : float

    Returns:
    - Fractional conductivity (float or np.array)
    """
    return 0.5 ** ((psi / psi50) ** b)

def Pprime(psi, psi50, b):
    """
    First derivative of the vulnerability curve

    Parameters:
    - psi : float or np.array
    - psi50 : float
    - b : float

    Returns:
    - First derivative (float or np.array)
    """
    return np.log(0.5) * P(psi, psi50, b) * b * (psi / psi50) ** (b - 1) / psi50

def Pprimeprime(psi, psi50, b):
    """
    Second derivative of the vulnerability curve

    Parameters:
    - psi : float or np.array
    - psi50 : float
    - b : float

    Returns:
    - Second derivative (float or np.array)
    """
    term1 = np.log(0.5) * b * (psi / psi50) ** (b - 1) / psi50 * Pprime(psi, psi50, b)
    term2 = np.log(0.5) * P(psi, psi50, b) * b * (b - 1) * (psi / psi50) ** (b - 2) / psi50**2
    return term1 + term2
